[{"C:\\Umidjon\\KAIST\\Hacktoberfest\\markdownEditor\\markdown\\src\\index.tsx":"1","C:\\Umidjon\\KAIST\\Hacktoberfest\\markdownEditor\\markdown\\src\\reportWebVitals.ts":"2","C:\\Umidjon\\KAIST\\Hacktoberfest\\markdownEditor\\markdown\\src\\App.tsx":"3","C:\\Umidjon\\KAIST\\Hacktoberfest\\markdownEditor\\markdown\\src\\Components\\CustomToolbar.tsx":"4","C:\\Umidjon\\KAIST\\Hacktoberfest\\markdownEditor\\markdown\\src\\Components\\markdownLite.tsx":"5","C:\\Umidjon\\KAIST\\Hacktoberfest\\markdownEditor\\markdown\\src\\Components\\plugins\\plugin.tsx":"6","C:\\Umidjon\\KAIST\\Hacktoberfest\\markdownEditor\\markdown\\src\\Components\\plugins\\TextColor.tsx":"7","C:\\Umidjon\\KAIST\\Hacktoberfest\\markdownEditor\\markdown\\src\\Components\\plugins\\Align.tsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":216,"mtime":1612249938638,"results":"12","hashOfConfig":"10"},{"size":3262,"mtime":1612246194865,"results":"13","hashOfConfig":"10"},{"size":1056,"mtime":1612331320629,"results":"14","hashOfConfig":"10"},{"size":1317,"mtime":1612264597970,"results":"15","hashOfConfig":"10"},{"size":1731,"mtime":1612330323096,"results":"16","hashOfConfig":"10"},{"size":1845,"mtime":1612331277112,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1kw7x5",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Umidjon\\KAIST\\Hacktoberfest\\markdownEditor\\markdown\\src\\index.tsx",[],["37","38"],"C:\\Umidjon\\KAIST\\Hacktoberfest\\markdownEditor\\markdown\\src\\reportWebVitals.ts",[],"C:\\Umidjon\\KAIST\\Hacktoberfest\\markdownEditor\\markdown\\src\\App.tsx",[],"C:\\Umidjon\\KAIST\\Hacktoberfest\\markdownEditor\\markdown\\src\\Components\\CustomToolbar.tsx",[],["39","40"],"C:\\Umidjon\\KAIST\\Hacktoberfest\\markdownEditor\\markdown\\src\\Components\\markdownLite.tsx",["41","42"],"C:\\Umidjon\\KAIST\\Hacktoberfest\\markdownEditor\\markdown\\src\\Components\\plugins\\plugin.tsx",["43","44","45"],"import * as React from 'react';\r\nimport Editor, { getDecorated, PluginProps } from 'react-markdown-editor-lite';\r\n\r\ninterface CounterState {\r\n  num: number;\r\n}\r\n\r\n\r\nconst insertMarkdown = (editor:Editor, type: string, option: any = {})=> {\r\n  let selection = editor.getSelection();\r\n  let decorateOption = option ? { ...option } : {};\r\n\r\n  // const decorate = getDecorated(selection.text, type, decorateOption);\r\n  const text= `<span style=\"color:#00D084\">${selection.text}</span>`;\r\n  const sel= {\r\n      start: 1,\r\n      end: selection.text.length + 1,\r\n    };\r\n  editor.insertText(text, true, sel);\r\n}\r\n\r\nconst Counter = (props: PluginProps) => {\r\n  const [num, setNum] = React.useState(props.config.start);\r\n  \r\n  const handleClick = () => {\r\n    // Call API, insert number to editor\r\n    // props.editor.insertMarkdown();\r\n    insertMarkdown(props.editor,\"\");\r\n    // Update itself's state\r\n    setNum(num + 1);\r\n  }\r\n\r\n  return (\r\n    <span\r\n      className=\"button button-type-counter\"\r\n      title=\"Counter\"\r\n      onClick={handleClick}\r\n    >\r\n      {num}\r\n    </span>\r\n  );\r\n}\r\n// Define default config if required\r\nCounter.defaultConfig = {\r\n  start: 0\r\n}\r\nCounter.align = 'left';\r\nCounter.pluginName = 'counter';\r\n\r\nexport default Counter;\r\n\r\n// // Usage:\r\n// Editor.use(Counter, {\r\n//   start: 10\r\n// });","C:\\Umidjon\\KAIST\\Hacktoberfest\\markdownEditor\\markdown\\src\\Components\\plugins\\TextColor.tsx",[],"C:\\Umidjon\\KAIST\\Hacktoberfest\\markdownEditor\\markdown\\src\\Components\\plugins\\Align.tsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":13,"nodeType":"54","messageId":"55","endLine":2,"endColumn":21},{"ruleId":"56","severity":1,"message":"57","line":29,"column":1,"nodeType":"58","endLine":37,"endColumn":2},{"ruleId":"52","severity":1,"message":"59","line":2,"column":18,"nodeType":"54","messageId":"55","endLine":2,"endColumn":30},{"ruleId":"52","severity":1,"message":"60","line":4,"column":11,"nodeType":"54","messageId":"55","endLine":4,"endColumn":23},{"ruleId":"52","severity":1,"message":"61","line":11,"column":7,"nodeType":"54","messageId":"55","endLine":11,"endColumn":21},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],["62"],["63"],"@typescript-eslint/no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'getDecorated' is defined but never used.","'CounterState' is defined but never used.","'decorateOption' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]